{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 15,
            "metadata": {
                "description": "Prefix for resource names"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for deployed resources"
            }
        },
        "virtualNetworkNewOrExisting":{
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Flag to indicate whether a new virtual network should be created (true), or use an existing one (false)."
            }
        },
        "deployStorage": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy a storage account"
            }
        },
        "deployBastion": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy a bastion server"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "vnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/20",
            "metadata": {
                "description": "CIDR for VNet (only used if creating a new VNet)"
            }
        },
        "mqSubnetName": {
            "type": "string",
            "defaultValue": "mq-subnet",
            "metadata": {
                "description": "Name of the subnet for the MQ VM's"
            }
        },
        "mqSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "CIDR for the MQ subnet (only used if creating a new VNet)"
            }
        },
        "bastionSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "CIDR for the bastion subnet"
            }
        },
        "storageSubnetName": {
            "type": "string",
            "defaultValue": "storage-subnet",
            "metadata": {
                "description": "Name of the subnet for the storage account"
            }
        },
        "storageSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.3.0/24",
            "metadata": {
                "description": "CIDR for the private storage subnet (only used if creating a new storage account)"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[concat(toLower(first(parameters('namePrefix'))),'s',substring(uniqueString(resourceGroup().id),1,7))]",
            "metadata": {
                "description": "Name for the storage account"
            }
        },
        "privateStorageEndpointName": {
            "type": "string",
            "defaultValue": "mq-premiumstorage",
            "metadata": {
                "description": "Name of the private endpoint for the storage"
            }
        },
        "mqsharename": {
            "type": "string",
            "defaultValue": "mqha",
            "metadata": {
                "description": "name of the Azure Premium File Share to create MQ instance"
            }
        },
        "vmNsgSecurityRules": {
            "type": "array",
            "metadata": {
                "description": "Network security group rules for the VM's"
            },
            "defaultValue": [
                {
                    "name": "SSH",
                    "properties": {
                        "priority": 300,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "22"
                    }
                },
                {
                    "name": "MQ",
                    "properties": {
                        "priority": 310,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "1414"                        
                    }
                }
            ]
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "metadata": {
                "description": "Size of MQ VM's"
            }
        },
        "vmDiskType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_LRS",
                "StandardSSD_LRS",
                "StandardSSD_ZRS",
                "UltraSSD_LRS"
            ],
            "metadata": {
                "description": "OS Disk type for Dev VM"
            }
        },
        "vmOSVersion": {
            "type": "string",
            "defaultValue": "Ubuntu 20.04 LTS",
            "allowedValues": [
                "Ubuntu 18.04 LTS",
                "Ubuntu 20.04 LTS",
                "Ubuntu 22.04 LTS",
                "RHEL 8.6"
            ],
            "metadata": {
                "description": "Operating system version"
            }
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Admin user for created VMs"
            }
        },
        "adminPassword": {
            "type": "secureString",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine."
            }
        },
        "authType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of VM authentication. SSH Key or Password"
            }
        },
        "securityType": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "TrustedLaunch"
            ],
            "metadata": {
                "description": "Security type for virtual machine (trusted launch not supported with RHEL)"
            }
        },
        "vm1Zone":{
            "type": "string",
            "defaultValue": "1",
            "allowedValues": [
                "1","2","3"
            ],
            "metadata": {
                "description": "Availability zone for active MQ VM"
            }
        },
        "vm2Zone":{
            "type": "string",
            "defaultValue": "3",
            "allowedValues": [
                "1","2","3"
            ],
            "metadata": {
                "description": "Availability zone for standby MQ VM"
            }
        },
        "createPublicIP": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to indicate whether a public ip address should be created."
            }
        },
        "publicIPName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-ip')]",
            "metadata": {
                "description": "Name for the public IP address if creating."
            }
        },
        "domainName": {
            "type": "string",
            "defaultValue": "[toLower( concat(parameters('namePrefix'),uniqueString(resourceGroup().name)) )]",
            "metadata": {
                "description": "Domain name prefix for the public IP address"
            }
        },
        "lbNsgSecurityRules": {
            "type": "array",
            "metadata": {
                "description": "Network security group rules for the load balancer"
            },
            "defaultValue": [
                {
                    "name": "MQ",
                    "properties": {
                        "priority": 300,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "1414"                        
                    }
                }
            ]
        },
        "branch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "Github branch for linked deployments."
            }
        },
        "scriptURI": {
            "type": "string",
            "defaultValue": "[concat('https://raw.githubusercontent.com/ibm-ecosystem-lab/azure-arm-templates/',parameters('branch'),'/ibm-products/')]",
            "metadata": {
                "description": "URI for the scripts to run post virtual machine creation"
            }
        }
    },
    "variables": {
        "serverCount": 2,
        "activeVMName": "[concat(parameters('namePrefix'),'-active-vm')]",
        "standbyVMName": "[concat(parameters('namePrefix'),'-standby-vm')]",
        "nsgName": "[concat(parameters('namePrefix'), '-nsg')]",
        "ngwName": "[concat(parameters('namePrefix'),'-ngw')]",
        "ngwPublicIPName": "[concat(parameters('namePrefix'),'ngw-pip')]",
        "nicName": "[concat(parameters('namePrefix'),'-nic')]",
        "publicIPName": "[concat(parameters('namePrefix'),'-pip')]",
        "lbName": "[concat(parameters('namePrefix'),'-lb')]",
        "securityProfile": {
            "uefiSettings": {
                "secureBootEnabled": true,
                "vTpmEnabled": true
            },
            "securityType": "[parameters('securityType')]"
        },
        "publicIP": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
        },
        "linuxConfigSSH": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                        "keyData": "[parameters('adminPassword')]"
                    }
                ]
            }
        },
        "linuxConfigPWD": {
            "disablePasswordAuthentication": false
        },
        "imageReference": {
            "Ubuntu 18.04 LTS": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "18_04-lts-gen2",
                "version": "latest"
            },
            "Ubuntu 20.04 LTS": {
                "publisher": "Canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts-gen2",
                "version": "latest"
            },
            "Ubuntu 22.04 LTS": {
                "publisher": "Canonical",
                "offer": "0001-com-ubuntu-server-jammy",
                "sku": "22_04-lts-gen2",
                "version": "latest"
            },
            "RHEL 8.6": {
                "publisher": "RedHat",
                "offer": "RHEL",
                "sku": "8_6",
                "version": "latest"
            }
        },
        "vnetId": {
            "new": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
            "existing": "[resourceId(parameters('vnetName'),'Microsoft.Network/virtualNetworks',parameters('vnetName'))]"
        },
        "mqSubnetId": "[concat(variables('vnetId')[parameters('virtualNetworkNewOrExisting')],'/subnets/',parameters('mqSubnetName'))]",
        "baseUrl": "[concat('https://raw.githubusercontent.com/ibm-ecosystem-lab/azure-arm-templates/',parameters('branch'),'/')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "condition": "[equals(parameters('virtualNetworkNewOrExisting'),'new')]",
            "apiVersion": "2022-07-01",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetCIDR')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('mqSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('mqSubnetCIDR')]",
                            "natGateway": {
                                "id": "[resourceId('Microsoft.Network/natGateways',variables('ngwName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/natGateways', variables('ngwName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-07-01",
            "name": "[variables('nsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('vmNsgSecurityRules')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-07-01",
            "name": "[variables('ngwPublicIPName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/natGateways",
            "apiVersion": "2022-07-01",
            "name": "[variables('ngwName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIpAddresses": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIpAddresses/', variables('ngwPublicIPName'))]"
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('ngwPublicIPName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-07-01",
            "condition": "[parameters('createPublicIP')]",
            "name": "[parameters('publicIPName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "publicIPAllocationMethod": "Static",
                "deleteOption": "Delete",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('domainName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-07-01",
            "copy": {
                "name": "niccount",
                "count": "[variables('serverCount')]"
            },
            "name": "[concat(variables('nicName'),'-',copyIndex(1))]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig1','-',copyIndex(1))]",
                        "properties": {
                            "subnet": {
                                "id": "[variables('mqSubnetId')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[variables('activeVMName')]",
            "location": "[parameters('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('vmDiskType')]"
                        }
                    },
                    "imageReference": "[variables('imageReference')[parameters('vmOSVersion')]]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'-1'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('activeVMName')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": "[if(equals(parameters('authType'), 'sshPublicKey'), variables('linuxConfigSSH'), variables('linuxConfigPWD'))]"
                },
                "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'),variables('securityProfile'),json('null'))]",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            },
            "zones": [
                "[parameters('vm1Zone')]"
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'-1'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[variables('standbyVMName')]",
            "location": "[parameters('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('vmDiskType')]"
                        }
                    },
                    "imageReference": "[variables('imageReference')[parameters('vmOSVersion')]]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'-2'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('standbyVMName')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": "[if(equals(parameters('authType'), 'sshPublicKey'), variables('linuxConfigSSH'), variables('linuxConfigPWD'))]"
                },
                "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'),variables('securityProfile'),json('null'))]",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            },
            "zones": [
                "[parameters('vm2Zone')]"
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'-2'))]",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('activeVMName'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "condition": "[parameters('deployStorage')]",
            "name": "private-fileshare",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), 'storage/private-fileshare/azuredeploy.json')]",
                    "contentVersion":"1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "privateStorageEndpointName": {
                        "value": "[parameters('privateStorageEndpointName')]"
                    },
                    "mqsharename": {
                        "value": "[parameters('mqsharename')]"
                    },
                    "createSubnet": {
                        "value": true
                    },
                    "subnetName": {
                        "value": "[parameters('storageSubnetName')]"
                    },
                    "subnetCIDR": {
                        "value": "[parameters('storageSubnetCIDR')]"
                    },
                    "deployLogAnalytics": {
                        "value": false
                    },
                    "workspaceName": {
                        "value": "tbd"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "condition": "[parameters('deployBastion')]",
            "name": "bastion",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'private-fileshare')]",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('activeVMName'))]",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('standbyVMName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), 'networking/bastion/azuredeploy.json')]",
                    "contentVersion":"1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "bastionSubnetCIDR": {
                        "value": "[parameters('bastionSubnetCIDR')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2022-03-01",
            "condition": "[if(equals(variables('imageReference')[parameters('vmOSVersion')].publisher, 'Canonical'), bool('true'), bool('false'))]",
            "location": "[parameters('location')]",
            "name": "[concat(variables('activeVMName'),'/','setup-nfs-ubuntu')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('activeVMName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'private-fileshare')]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(variables('baseUrl'),'/ibm-products/ibm-mq/vm/scripts/')]"
                    ],
                    "commandToExecute": "[concat('/bin/bash setup-nfs-ubuntu.sh ',parameters('storageAccountName'),' ',parameters('mqsharename'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2022-03-01",
            "condition": "[if(equals(variables('imageReference')[parameters('vmOSVersion')].publisher, 'Canonical'), bool('true'), bool('false'))]",
            "location": "[parameters('location')]",
            "name": "[concat(variables('standbyVMName'),'/','setup-nfs-ubuntu')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('standbyVMName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'private-fileshare')]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(variables('baseUrl'),'/ibm-products/ibm-mq/vm/scripts/')]"
                    ],
                    "commandToExecute": "[concat('/bin/bash setup-nfs-ubuntu.sh ',parameters('storageAccountName'),' ',parameters('mqsharename'))]"
                }
            }
        }
    ],
    "outputs": {

    }
}