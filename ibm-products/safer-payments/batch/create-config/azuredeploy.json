{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure region for deployment of resources"
            }
        },
        "binaryPath": {
            "type": "securestring",
            "metadata": {
                "description": "URI to the installation binary"
            }
        },
        "binaryName": {
            "type": "string",
            "defaultValue": "Safer_Payments_6.5_mp-ml.tar"
        },
        "ipAddresses": {
            "type": "object",
            "metadata": {
                "description": "Object containing ip addresses. Schema {\"node1\":\"ip\",\"node2\":\"ip\",\"node3\":\"ip\"}"
            }
        },
        "installPath": {
            "type": "string",
            "defaultValue": "/usr/ibm/safer_payments/install",
            "metadata": {
                "description": "Path for the installation"
            }
        },
        "instancePath": {
            "type": "string",
            "defaultValue": "/usr/ibm/safer_payments/instance",
            "metadata": {
                "description": "Base path for each instance (instance number will be added)"
            }
        },
        "spUser": {
            "type": "string",
            "defaultValue": "spuser",
            "metadata": {
                "description": "Name of the user to be created for the software"
            }
        },
        "spGroup": {
            "type": "string",
            "defaultValue": "spgroup",
            "metadata": {
                "description": "Name of the group to be created for the software"
            }
        },
        "binDir": {
            "type": "string",
            "defaultValue": "/usr/local/bin",
            "metadata": {
                "description": "Path to install JRE runtime"
            }
        },
        "createKeyVault": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create a new key vault or use existing"
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "[concat('sp-keyvault-',substring(uniqueString(resourceGroup().id),1,5))]",
            "metadata": {
                "description": "Name of the keyvault. Note these are globally unique."
            }
        },
        "keyVaultSku": {
            "type": "object",
            "defaultValue": {
                "name": "standard",
                "family": "A"
            },
            "metadata": {
                "description": "The SKU to use for the key vault. Schema {\"name\":\"skuname\",\"family\":\"SKUFamily\"}"
            }
        },
        "createManagedId": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create a new managed identity or use an existing one"
            }
        },
        "managedIdName": {
            "type": "string",
            "defaultValue": "vm-mgd-id",
            "metadata": {
                "description": "Name of the managed identity to be used to authorise VM actions."
            }
        }
    },
    "variables": {

    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "condition": "[parameters('createManagedId')]",
            "apiVersion": "2023-01-31",
            "name": "[parameters('managedIdName')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2023-02-01",
            "condition": "[parameters('createKeyVault')]",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": "[parameters('keyVaultSku')]",
                "tenantId": "[tenant().tenantId]",
                "enableRbacAuthorization": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('keyVaultName'), '/binaryPath')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "contentType": "string",
                "value": "[parameters('binaryPath')]"
            }
        },
        {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "role-assignment",
        "properties": {
            "expressionEvaluationOptions": {
            "scope": "inner"
            },
            "mode": "Incremental",
            "parameters": {
            "keyVaultName": {
                "value": "[parameters('keyVaultName')]"
            },
            "roleAssignmentName": {
                "value": "[guid(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')),'2023-01-31').principalId, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483'))]"
            },
            "roleDefinitionId": {
                "value": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]"
            },
            "principalId": {
                "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')),'2023-01-31').principalId]"
            }
            },
            "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                    "roleAssignmentName": {
                        "type": "string"
                    },
                    "roleDefinitionId": {
                        "type": "string"
                    },
                    "principalId": {
                        "type": "string"
                    },
                    "keyVaultName": {
                        "type": "string"
                    }
                },
                "resources": [
                    {
                        "type": "Microsoft.Authorization/roleAssignments",
                        "apiVersion": "2020-10-01-preview",
                        "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
                        "name": "[parameters('roleAssignmentName')]",
                        "properties": {
                            "roleDefinitionId": "[parameters('roleDefinitionId')]",
                            "principalId": "[parameters('principalId')]",
                            "principalType": "ServicePrincipal"
                        }
                    }
                ]
            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
            "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName'))]"
        ]
    }
    ],
    "outputs": {
        "saferPaymentsConfig": {
            "type": "object",
            "value": {
                "binaryPathSecret": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), 'binaryPath'), '2021-10-01', 'Full')]",
                "binaryName": "[parameters('binaryName')]",
                "managedId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',parameters('managedIdName'))]",
                "node1": {
                    "type": "primary",
                    "ip": "[parameters('ipAddresses')['node1']]",
                    "installPath": "[parameters('installPath')]",
                    "instancePath": "[concat(parameters('instancePath'),'1')]",
                    "spUser": "[parameters('spUser')]",
                    "spGroup": "[parameters('spGroup')]",
                    "binDir": "[parameters('binDir')]"
                },
                "node2": {
                    "type": "ha",
                    "ip": "[parameters('ipAddresses')['node2']]",
                    "installPath": "[parameters('installPath')]",
                    "instancePath": "[concat(parameters('instancePath'),'2')]",
                    "spUser": "[parameters('spUser')]",
                    "spGroup": "[parameters('spGroup')]",
                    "binDir": "[parameters('binDir')]"
                },
                "node3": {
                    "type": "dr",
                    "ip": "[parameters('ipAddresses')['node3']]",
                    "installPath": "[parameters('installPath')]",
                    "instancePath": "[concat(parameters('instancePath'),'3')]",
                    "spUser": "[parameters('spUser')]",
                    "spGroup": "[parameters('spGroup')]",
                    "binDir": "[parameters('binDir')]"                
                },
                "node4": {
                    "type": "standby",
                    "ip": "[parameters('ipAddresses')['node4']]",
                    "installPath": "[parameters('installPath')]",
                    "instancePath": "[concat(parameters('instancePath'),'4')]",
                    "spUser": "[parameters('spUser')]",
                    "spGroup": "[parameters('spGroup')]",
                    "binDir": "[parameters('binDir')]"                
                }
            }
        }
    }
}